from aiogram import F, Router
from aiogram.filters import Command
from aiogram.filters import StateFilter
from aiogram.fsm.state import default_state
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram import types
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.fsm.context import FSMContext
import gspread
from oauth2client.service_account import ServiceAccountCredentials
router = Router()

languages = {"ru": '–†—É—Å—Å–∫–∏–π', "ua": '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'}

scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(creds)
spreadsheet_url = "https://docs.google.com/spreadsheets/d/1WWmBw7LSUg8WHrQjbVMfSNl_2EA8NYUcE6Zpg2LiBto/edit?usp=sharing"
worksheet_name = "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ —É—Ä–æ–∫–∏"
worksheet = client.open_by_url(spreadsheet_url).worksheet(worksheet_name)


users_with_free_lessons = set()


def load_users_with_free_lessons():
    global users_with_free_lessons
    users_with_free_lessons = set()
    worksheet = client.open_by_url(spreadsheet_url).worksheet("–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ —É—Ä–æ–∫–∏")

    # –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –ø–µ—Ä—à–æ–º—É —Å—Ç–æ–≤–ø—Ü—ñ (—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
    user_ids = worksheet.col_values(1)

    # –ü–æ—á–∏–Ω–∞—é—á–∏ –∑ –¥—Ä—É–≥–æ–≥–æ —Ä—è–¥–∫–∞ (–ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ - –∑–∞–≥–æ–ª–æ–≤–∫–∏), –ø–µ—Ä–µ–±–µ—Ä—ñ—Ç—å –∫–æ–∂–Ω–∏–π —Ä—è–¥–æ–∫
    for user_id in user_ids[1:]:
        if user_id.strip():  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ä—è–¥–æ–∫ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π
            try:
                users_with_free_lessons.add(int(user_id))
            except ValueError:
                print(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö: {user_id}")

    return users_with_free_lessons


users_with_free_lessons = load_users_with_free_lessons()

print("–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–º–∏ —É—Ä–æ–∫–∞–º–∏:")
print(users_with_free_lessons)


@router.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    button_ru = KeyboardButton(text="–†—É—Å—Å–∫–∏–π")
    button_ua = KeyboardButton(text="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞")
    user = message.from_user
    user_name = f"{user.first_name} {user.last_name}" if user.last_name else user.first_name

    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ resize_keyboard —Ç–∞ keyboard_button_height
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[button_ru, button_ua]],
        resize_keyboard=True,  # –ó—Ä–æ–±–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—à–∏–º–∏
        keyboard_button_height=2  # –ó–∞–¥–∞—î –≤–∏—Å–æ—Ç—É –∫–Ω–æ–ø–æ–∫ (–≤ —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É 2)
    )

    await message.answer(f"–ü—Ä–∏–≤—ñ—Ç, {user_name}!üôÉ\n–†–∞–¥—ñ –±–∞—á–∏—Ç–∏ –í–∞—Å —É Transavia Groupü§ó!\n–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –º–æ–≤—É:", reply_markup=keyboard)




# default_state - —ç—Ç–æ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ StateFilter(None)
@router.message(StateFilter(None), Command(commands=["cancel"]))
@router.message(default_state, F.text.lower() == "–æ—Ç–º–µ–Ω–∞")
async def cmd_cancel_no_state(message: Message, state: FSMContext):
    # –°—Ç–µ–π—Ç —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —É–¥–∞–ª–∏–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ
    await state.set_data({})
    await message.answer(
        text="–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å",
        reply_markup=ReplyKeyboardRemove()
    )


@router.message(Command(commands=["cancel"]))
@router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞")
async def cmd_cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=ReplyKeyboardRemove()
    )


@router.message(F.animation)
async def echo_gif(message: Message):
    await message.reply_animation(message.animation.file_id)
