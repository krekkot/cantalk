import telebot
from telebot import types
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import random


scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(creds)
sheet_url = "https://docs.google.com/spreadsheets/d/1WWmBw7LSUg8WHrQjbVMfSNl_2EA8NYUcE6Zpg2LiBto/edit?usp=sharing"
gsheet = client.open_by_url(sheet_url).sheet1

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
bot = telebot.TeleBot('6337428893:AAFFWOQRUTi-3U_FVM_TE4Izz-VJpRuH6ws')

languages = {'ru': '–†—É—Å—Å–∫–∏–π', 'uk': '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
packages = {
    'basic': {
        'name': '–ü–∞–∫–µ—Ç LIFE',
        'description': '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π —Ä–æ–±–æ—á–∏–π –∫–∞–±—ñ–Ω–µ—Ç\n 100 –≤—ñ–¥–µ–æ—É—Ä–æ–∫—ñ–≤,\n 8 –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å (–±–µ–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏),\n 7 —Ç–µ—Å—Ç—É–≤–∞–Ω—å –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é,\n 3 –≤–µ–±—ñ–Ω–∞—Ä–∏,\n –£—Å—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç—Ä–µ–Ω—ñ–Ω–≥—É –¥–æ—Å—Ç—É–ø–Ω—ñ —É –∑–∞–ø–∏—Å—ñ 1 –º—ñ—Å—è—Ü—å,\n –î–æ—Å—Ç—É–ø –¥–æ –∑–∞–∫—Ä–∏—Ç–æ—ó Facebook –≥—Ä—É–ø–∏ –Ω–∞ 8 —Ç–∏–∂–Ω—ñ–≤',
        'price': 115.00,
    },
    'standard': {
        'name': '–ü–∞–∫–µ—Ç BUSINESS',
        'description': '–í—Å–µ, —â–æ –≤—Ö–æ–¥–∏—Ç—å –¥–æ –ø–∞–∫–µ—Ç–∞ ‚ÄúLife‚Äù +\n –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π —Ä–æ–±–æ—á–∏–π –∫–∞–±—ñ–Ω–µ—Ç —ñ–∑ —Ç–µ—Ä–º—ñ–Ω–æ–º –¥–æ—Å—Ç—É–ø—É 3 –º—ñ—Å—è—Ü—ñ.\n –°–∏–º—É–ª—è—Ü—ñ—è —Ä–µ–∞–ª—å–Ω–∏—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ñ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ iDG (Harvard, MIT platform)\n –ê–Ω–∞–ª—ñ–∑ –≤–∞—à–æ–≥–æ ¬´–ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω–æ–≥–æ –ø–æ—á–µ—Ä–∫—É¬ª —Ç–∞ –ø–∞—Ç–µ—Ä–Ω—ñ–≤ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏ –∑ –ø–æ—Å—Ç—ñ–π–Ω–∏–º –∑–≤–æ—Ä–æ—Ç–Ω–∏–º –∑–≤‚Äô—è–∑–∫–æ–º –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ —Ç–∞ —Ç—Ä–µ–Ω–µ—Ä–∞\n  18 —ñ–≥—Ä–æ–≤–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫—É–º—ñ–≤ —Ç–∞ –≤—ñ–¥–µ–æ/–∞—É–¥—ñ–æ –∑–∞–ø–∏—Å–∏ –∑–∞ –≤–∞—à–æ—é —É—á–∞—Å—Ç—é\n –†–æ–∑–±—ñ—Ä 7 —Ç–µ—Å—Ç—É–≤–∞–Ω—å, 5 –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å, —Ñ—ñ–ª—å–º—ñ–≤ —Ç–∞ —Ç–µ–∫—Å—Ç—ñ–≤ (–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é)\n –î–æ—Å—Ç—É–ø –¥–æ –∑–∞–∫—Ä–∏—Ç–æ—ó Facebook —Ç–∞ Viber –≥—Ä—É–ø–∏ –Ω–∞ 3 –º—ñ—Å—è—Ü—ñ\n  –ë–û–ù–£–°: 50% –∑–Ω–∏–∂–∫–∏ –Ω–∞ –æ–Ω–ª–∞–π–Ω –∫–µ–º–±—Ä–∏–¥–∑—å–∫–∏–π —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è Belbin Team Roles',
        'price': 487.00,
    },
    'premium': {
        'name': '–ü–∞–∫–µ—Ç PREMIUM',
        'description': '–í—Å–µ, —â–æ –≤—Ö–æ–¥–∏—Ç—å –¥–æ –ø–∞–∫–µ—Ç–∞ ‚ÄúBusiness‚Äù + \n –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∑–∞–Ω—è—Ç—å –≤–ø—Ä–æ–¥–æ–≤–∂ 6 –º—ñ—Å—è—Ü—ñ–≤\n–û–Ω–ª–∞–π–Ω –∫–µ–º–±—Ä—ñ–¥–∂—Å—å–∫–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è Belbin Team Roles —Ç–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–∞ —Å–µ—Å—ñ—è\n –Ü–≥—Ä–æ–≤—ñ —Å–ø–∞—Ä–∏–Ω–≥–∏ –∑ –Ω–∞–π—Å–∏–ª—å–Ω—ñ—à–∏–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏ ‚Äì –ü–µ—Ä–µ–º–æ–∂—Ü—è–º–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ—Ç–æ–∫—ñ–≤ \n –û—Å–æ–±–∏—Å—Ç–µ —Å—É–ø—Ä–æ–≤–æ–¥–∂–µ–Ω–Ω—è —Ç—Ä–µ–Ω–µ—Ä–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –≤—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å ‚Äì 7 —Ç–µ—Å—Ç—É–≤–∞–Ω—å, 5 –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å, —Ñ—ñ–ª—å–º—ñ–≤ —Ç–∞ —Ç–µ–∫—Å—Ç—ñ–≤ (–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é)\n –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ 24/7 —É –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω–∏—Ö –∫–µ–π—Å–∞—Ö\n –¢—Ä–∏ 60-—Ö–≤–∏–ª–∏–Ω–Ω—ñ skype-—Å–µ—Å—ñ—ó –∑ —Ç—Ä–µ–Ω–µ—Ä–æ–º –¥–ª—è –≤—ñ–¥–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö –∫–µ–π—Å—ñ–≤ \n –ü—ñ–¥–±—ñ—Ä —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫—É–º—ñ–≤ —Ç–∞ —Ä–æ–∑–±—ñ—Ä –∫–µ–π—Å—ñ–≤ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –í–∞—à–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –∂–∏—Ç—Ç—î–≤–∏—Ö —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å',
        'price': 932.00,
    }
}

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–ª—É—á–∏–≤—à–∏—Ö –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏
users_with_free_lessons = set()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
def create_language_keyboard():
    markup = types.InlineKeyboardMarkup()
    for code, language in languages.items():
        button = types.InlineKeyboardButton(text=language, callback_data=code)
        markup.add(button)
    return markup

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –ø–∞–∫–µ—Ç—É
def create_package_keyboard():
    markup = types.InlineKeyboardMarkup()
    for package_key, package_info in packages.items():
        button_text = f"–î—ñ–∑–Ω–∞—Ç–∏—Å—å –ø—Ä–æ {package_info['name']}"
        button = types.InlineKeyboardButton(text=button_text, callback_data=f"package_{package_key}")
        markup.add(button)
    return markup

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    chat_id = message.chat.id

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä
    language_markup = create_language_keyboard()
    package_markup = create_package_keyboard()

    bot.send_message(chat_id, f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name} {message.from_user.last_name}!\n–Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂—É –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—É '–ü–ï–†–ï–ì–û–í–û–†–ò I –õI–î–ï–†–°–¢–í–û' !\n–û–±–µ—Ä—ñ—Ç—å,,–±—É–¥—å –ª–∞—Å–∫–∞,–º–æ–≤—É:", reply_markup=language_markup)


@bot.callback_query_handler(func=lambda call: call.data in languages)
def handle_language_selection(call):
    chat_id = call.message.chat.id
    language = call.data
    if language == 'ru':
        bot.send_message(chat_id, "–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –ø–æ–∫–∏ —è –Ω–µ —Ä–æ–∑–º–æ–≤–ª—è—é –º–æ–≤–æ—é –æ–∫—É–ø–∞–Ω—Ç–∞.")
    else:
        # –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –∑–±–µ—Ä–µ–≥—Ç–∏ –≤–∏–±—ñ—Ä –º–æ–≤–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
        bot.send_message(chat_id, f"–î—è–∫—É—é,—â–æ –≤–∏–±—Ä–∞–ª–∏ {languages[language]}")

@bot.message_handler(func=lambda message: message.text == f'üá∫üá¶ {languages["ua"]}')
def handle_ukrainian_language(message):
    bot.send_message(message.chat_id, f"–©–æ —Å–∞–º–µ –í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å? {languages[language]}",
                     reply_markup=package_markup)



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith("package_"))
def handle_package_selection(call):
    user_id = call.from_user.id
    package_key = call.data.split("_")[1]
    selected_package = packages.get(package_key)

    if selected_package:
        bot.send_message(user_id, f"{selected_package['name']}\n\n{selected_package['description']}\n\n–¶–µ–Ω–∞: {selected_package['price']}")

@bot.message_handler(func=lambda message: message.text == "–û—Ç—Ä–∏–º–∞—Ç–∏ 3 –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —É—Ä–æ–∫–∏ –∑ –∫—É—Ä—Å—É –±–µ–∑–ø–ª–∞—Ç–Ω–æ")
def handle_free_lessons(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏
    if user_id in users_with_free_lessons:
        bot.send_message(user_id, "–í–∏ –≤–∂–µ –æ—Ç—Ä–∏–º—É–≤–∞–ª–∏ –±–µ–∑–ø–ª–∞—Ç–Ω—ñ —É—Ä–æ–∫–∏.")
    else:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
        random_lessons = random.sample(range(2, 58), 3)  # –°—Ç—Ä–æ–∫–∏ B2:B57

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–æ–∫ –Ω–∞ —É—Ä–æ–∫–∏
        for lesson_number in random_lessons:
            lesson_url = gsheet.cell(lesson_number, 3).value  # –°—Ç—Ä–æ–∫–∏ A2:A57
            bot.send_message(user_id, f"–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π —É—Ä–æ–∫ : {lesson_url}")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –ø–æ–ª—É—á–∞–ª –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏
        users_with_free_lessons.add(user_id)

# TODO: –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Portmone

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
